// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Conversation {
  id            String         @id @default(cuid())
  username      String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  messages      Message[]
  persona       Persona?      @relation(fields: [personaId], references: [id])
  personaId     String?
  personaChanges PersonaChange[]
}

model Message {
  id             String       @id @default(cuid())
  content        String
  role           String       // 'user' or 'assistant'
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId String
  persona        Persona?     @relation(fields: [personaId], references: [id])
  personaId      String?
  createdAt      DateTime     @default(now())
}

model Persona {
  id              String         @id @default(cuid())
  name            String        @unique
  systemPrompt    String        @db.Text
  isActive        Boolean       @default(true)
  conversations   Conversation[]
  messages        Message[]
  settings        Settings[]    @relation("PersonaToSettings")
  fromChanges     PersonaChange[] @relation("FromPersona")
  toChanges       PersonaChange[] @relation("ToPersona")
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Settings {
  id                String   @id @default("1")
  temperature       Float    @default(0.7)
  maxTokens         Int      @default(1000)
  rotationInterval  Int      @default(360)  // Default to 360 minutes (6 hours)
  modelName         String   @default("gpt-4-0125-preview")
  selectedPersonaId String?
  selectedPersona   Persona? @relation("PersonaToSettings", fields: [selectedPersonaId], references: [id])
  lastRotation      DateTime?
}

model AdminSettings {
  id          String   @id @default(cuid())
  key         String   @unique
  value       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model PersonaChange {
  id             String       @id @default(cuid())
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId String
  fromPersona    Persona?     @relation("FromPersona", fields: [fromPersonaId], references: [id])
  fromPersonaId  String?
  toPersona      Persona      @relation("ToPersona", fields: [toPersonaId], references: [id])
  toPersonaId    String
  timestamp      DateTime     @default(now())
}
